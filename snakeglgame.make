# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
TARGETDIR = build/bin
TARGET = $(TARGETDIR)/snakeglgame
INCLUDES += -Isrc/game -Isrc -Ivendors/glm-1.0.1 -Isrc/engine
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += build/bin/libsnakeglengine.so
LDDEPS += build/bin/libsnakeglengine.so
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef

ifeq ($(config),debug)
OBJDIR = build/obj/Debug/snakeglgame
DEFINES += -D_SNAKEGL_LINUX -D_CRT_SECURE_NO_WARNINGS -DRES_DIR=\"../res/\" -D_SNAKEGL_GAME -D_SNAKEGL_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++23
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -Wl,-rpath,'$$ORIGIN' -m64
define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -rf "/home/ivan/projects/snakegl/res" "/home/ivan/projects/snakegl/build"
endef

else ifeq ($(config),release)
OBJDIR = build/obj/Release/snakeglgame
DEFINES += -D_SNAKEGL_LINUX -D_CRT_SECURE_NO_WARNINGS -DRES_DIR=\"../res/\" -D_SNAKEGL_GAME -D_SNAKEGL_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++23
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -Wl,-rpath,'$$ORIGIN' -m64 -s
define POSTBUILDCMDS
	@echo Running postbuild commands
	cp -rf "/home/ivan/projects/snakegl/res" "/home/ivan/projects/snakegl/build"
	mkdir -p /home/ivan/projects/snakegl/build/snakegl
	cp -rf "/home/ivan/projects/snakegl/res" "/home/ivan/projects/snakegl/build/snakegl"
	mkdir -p /home/ivan/projects/snakegl/build/snakegl/bin
	cp -f "/home/ivan/projects/snakegl/build/bin/snakeglgame" "/home/ivan/projects/snakegl/build/snakegl/bin"
	cp -f "/home/ivan/projects/snakegl/build/bin/libsnakeglengine.so" "/home/ivan/projects/snakegl/build/snakegl/bin"
endef

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/applemanager.o
GENERATED += $(OBJDIR)/field.o
GENERATED += $(OBJDIR)/game.o
GENERATED += $(OBJDIR)/gameapplication.o
GENERATED += $(OBJDIR)/main.o
GENERATED += $(OBJDIR)/snake.o
OBJECTS += $(OBJDIR)/applemanager.o
OBJECTS += $(OBJDIR)/field.o
OBJECTS += $(OBJDIR)/game.o
OBJECTS += $(OBJDIR)/gameapplication.o
OBJECTS += $(OBJDIR)/main.o
OBJECTS += $(OBJDIR)/snake.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking snakeglgame
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning snakeglgame
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/applemanager.o: src/game/applemanager/applemanager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/field.o: src/game/field/field.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/game.o: src/game/game/game.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gameapplication.o: src/game/gameapplication/gameapplication.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/main.o: src/game/main.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/snake.o: src/game/snake/snake.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif